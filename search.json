[
  {
    "objectID": "data-software-code.html",
    "href": "data-software-code.html",
    "title": "Data, software & code",
    "section": "",
    "text": "Many of the links below will take you to content on GitHub (@vbaliga) or Figshare (see my profile here)."
  },
  {
    "objectID": "data-software-code.html#software-packages",
    "href": "data-software-code.html#software-packages",
    "title": "Data, software & code",
    "section": "Software packages",
    "text": "Software packages\n\npathviewr: Tools to import, clean, and visualize animal movement data in R\n\nPart of the rOpenSci project (github: ropensci/pathviewr)\npathviewr offers tools to import, clean, and visualize movement data, particularly from motion capture systems such from Optitrack’s Motive, the Straw Lab’s Flydra, or from other sources. We provide functions to remove artifacts, standardize tunnel position and tunnel axes, select a region of interest, isolate specific trajectories, fill gaps in trajectory data, and calculate 3D and per-axis velocity. For experiments of visual guidance, we also provide functions that use subject position to estimate perception of visual stimuli. Written with Melissa S. Armstrong and Eric R. Press\n\n\n\ngaussplotR: Fit, predict, and plot 2D Gaussians in R\n\ngaussplotR provides functions to fit two-dimensional Gaussian functions, predict values from such functions, and produce plots of predicted data.\nAccompanying paper (Baliga, 2021) in the Journal of Open Source Software\n\n\n\nworkloopR: Analysis of work loops and other data from muscle physiology experiments in R\n\nPart of the rOpenSci project (github: ropensci/workloopR)\nworkloopR (pronounced “work looper”) provides functions for the import, transformation, and analysis of muscle physiology experiments in R. Over the course of developing the package, we expanded this goal to also cover experiments that are often complementary to the work loop technique.\nAccompanying paper (Baliga and Senthivasan, 2019) in the Journal of Open Source Software\n\n\n\ngenbank_downloadR: Batch downloading of DNA or protein sequences from GenBank\n\nAvailable on github: vbaliga/genbank_downloadR\nThis is (currently) written as an R script rather than as a full-blown package"
  },
  {
    "objectID": "data-software-code.html#data-code-from-pubs",
    "href": "data-software-code.html#data-code-from-pubs",
    "title": "Data, software & code",
    "section": "Data & code from pubs",
    "text": "Data & code from pubs\nMany of these repositories contain phylogenies that we’ve inferred, but be sure to see the Phylogenetic trees section below for straightforward access to MCC & ML trees.\n\nfigshare repository for: Smyth G, Baliga VB, Gaede AH, Wylie DR, and Altshuler DL. 2022. Specializations in optic flow encodingin the pretectum of hummingbirds and zebra finches. Current Biology.\nfigshare repository for: Harvey, CA, Baliga VB, Wong JCM, Altshuler DL, and Inman DJ. 2022. Birds can transition between stable and unstable states via wing morphing. Nature. (repository arranged & maintained by Christina Harvey)\nfigshare repository for: Harvey C, Baliga VB, Goates CD, Hunsaker D, and Inman DJ. 2021. Gull-inspired joint-driven wing morphing allows adaptive longitudinal flight control. Journal of the Royal Society Interface. (repository arranged & maintained by Christina Harvey)\nfigshare repository for: Leal PBC, Cabral-Seanez M, Baliga VB, Altshuler DL, and Hartl DJ. 2021. Phase transformation-driven artificial muscle mimics the multifunctionality of avian wing muscle. Journal of the Royal Society Interface. (repository arranged & maintained by Pedro Leal)\nfigshare repository for: Bahlman JW, Baliga VB, and Altshuler DL. 2020. Flight muscle power increases with strain amplitude and decreases with cycle frequency in zebra finches (Taeniopygia guttata). Journal of Experimental Biology.\nfigshare repository for: Baliga VB, Szabo I, and Altshuler DL. 2019. Range of motion in the avian wing is strongly associated with flight behavior and body mass. Science Advances.\ngithub repository for: Damsgaard C, Baliga VB, Bates E, Burggren W, McKenzie DJ, Taylor E, and Wright PA. 2019. Evolutionary and Cardio-Respiratory Physiology of Air-breathing and Amphibious Fishes. Acta Physiologica. (repository arranged & maintained by Christian Damsgaard)\nfigshare repository for: Baliga VB and Mehta RS. 2019. Morphology, ecology, and biogeography of independent origins of cleaning behavior around the world. Integrative and Comparative Biology.\nfigshare repository for: Harvey C, Baliga VB, Lavoie P, and Altshuler DL. 2019. Wing morphing allows gulls to modulate static pitch stability during gliding. Journal of the Royal Society Interface. (repository arranged & maintained by Christina Harvey)"
  },
  {
    "objectID": "data-software-code.html#phylogenetic-trees",
    "href": "data-software-code.html#phylogenetic-trees",
    "title": "Data, software & code",
    "section": "Phylogenetic trees",
    "text": "Phylogenetic trees\nI am generally happy to share trees from posterior distributions — just shoot me an email\n\nBirds (Aves)\n\n222 taxa across Aves + outgroup; from Baliga et al. 2019 (Science Advances):\n\nBayesian MCC tree (download)\nMaximum likelihood tree (download)\n\n\n\n\nGobies (Gobiidae)\n\n54 species of Western Atlantic gobies + outgroup; from Baliga and Mehta 2019 (Integrative and Comparative Biology):\n\nBayesian MCC tree (download)\n\n\n\n\nMarine Angelfishes (Pomacanthidae)\n\n72 species of marine angelfishes + outgroup; from Baliga and Mehta 2019 (Integrative and Comparative Biology):\n\nBayesian MCC tree (download)\n\n\n\n\nWrasses & Parrotfishes (Labridae)\n\n344 species of wrasses + parrotfishes + outgroup; from Baliga and Law 2016 (Molecular Phylogenetics and Evolution):\n\nBayesian MCC tree (download)\nMaximum likelihood tree (download)"
  },
  {
    "objectID": "posts/2019-05-03-parallel-processing-for-mcmcglmm-in-r-windows-friendly/index.html",
    "href": "posts/2019-05-03-parallel-processing-for-mcmcglmm-in-r-windows-friendly/index.html",
    "title": "Parallel processing for MCMCglmm in R (Windows-friendly)",
    "section": "",
    "text": "Lately, I have been using the MCMCglmm package to run linear mixed-models in a Bayesian framework. The documentation is generally very good but there seems to be relatively little support for using parallel processing (here: using multiple cores on your machine) to efficiently run large volumes of mcmc runs. This is especially true for Windows users, who cannot use functions like parallel::mclapply().\nI’m happy to share that I have worked out a solution using the parallel package. Basically, I set up a virtual cluster and then use the parallel::parLapply() function to run iterations of MCMCglmm() in parallel."
  },
  {
    "objectID": "posts/2019-05-03-parallel-processing-for-mcmcglmm-in-r-windows-friendly/index.html#data",
    "href": "posts/2019-05-03-parallel-processing-for-mcmcglmm-in-r-windows-friendly/index.html#data",
    "title": "Parallel processing for MCMCglmm in R (Windows-friendly)",
    "section": "Data",
    "text": "Data\nI’ll use “Example 2” from the MCMCglmm() function help. You can skip ahead to the next section if instead you’d like to tailor this to your own data & analysis.\nFirst load (or install&load) the MCMCglmm and parallel packages:\n\n## If a package is installed, it will be loaded. If any \n## are not, the missing package(s) will be installed \n## from CRAN and then loaded.\n\n## First specify the packages of interest\npackages = c(\"MCMCglmm\", \"parallel\")\n\n## Now load or install&load all\npackage.check <- lapply(\n  packages,\n  FUN = function(x) {\n    if (!require(x, character.only = TRUE)) {\n      install.packages(x, dependencies = TRUE)\n      library(x, character.only = TRUE)\n    }\n  }\n)\n\nWith the packages loaded, we’ll prep our data set. Lifting this directly from the MCMCglmm() help page:\n\ndata(bird.families)\nphylo.effect <- rbv(bird.families, 1, nodes = \"TIPS\")\nphenotype <- phylo.effect + rnorm(dim(phylo.effect)[1], 0, 1)\n\n# simulate phylogenetic and residual effects\n# with unit variance\ntest.data <- data.frame(phenotype = phenotype,\n                        taxon = row.names(phenotype))\nAinv <- inverseA(bird.families)$Ainv\n\n# inverse matrix of shared phyloegnetic history\nprior <- list(R = list(V = 1, nu = 0.002), \n              G = list(G1 = list(V = 1, nu = 0.002)))\n\nmodel2 <- MCMCglmm(\n  phenotype ~ 1,\n  random =  ~ taxon,\n  ginverse = list(taxon = Ainv),\n  data = test.data,\n  prior = prior,\n  verbose = FALSE,\n  nitt = 1300,\n  burnin = 300,\n  thin = 1\n)\nsummary(model2)\n\n Iterations = 301:1300\n Thinning interval  = 1\n Sample size  = 1000 \n\n DIC: 375.0159 \n\n G-structure:  ~taxon\n\n\n R-structure:  ~units\n\n\n Location effects: phenotype ~ 1 \n\n            post.mean l-95% CI u-95% CI eff.samp pMCMC\n(Intercept)    0.1630  -0.5899   0.8938     1000 0.654\nOf course, the example provided sets nitt to only 1300, yielding an ESS of only ~800 for the fixed effect. I am guessing this is intended to make sure the example is quick to run.\nBoosting this to nitt = 100000, burnin = 10000, and thin = 10 gives a more healthy ESS > 8000. But please note that this will take a lot longer to finish (I’ll leave it up to you to use the Sys.time() function to time it yourself)."
  },
  {
    "objectID": "posts/2019-05-03-parallel-processing-for-mcmcglmm-in-r-windows-friendly/index.html#run-mcmc-chains-in-parallel",
    "href": "posts/2019-05-03-parallel-processing-for-mcmcglmm-in-r-windows-friendly/index.html#run-mcmc-chains-in-parallel",
    "title": "Parallel processing for MCMCglmm in R (Windows-friendly)",
    "section": "Run MCMC chains in parallel",
    "text": "Run MCMC chains in parallel\nWhenever conducting MCMC-based analyses, it’s advisable to conduct multiple runs (different chains) and then assess convergence. I’ll leave the convergence assessments for another day (but here’s a good StackExchange post). For now we’ll just conduct 10 runs of this model, each using nitt = 100000, using parallel processing.\nPLEASE NOTE: I am setting this up to use only 80% of your machine’s total logical processors. You can certainly harness all of your CPUs if you’d like, although I advise against doing so if any of your MCMC runs take more than a few minutes. It also doesn’t make sense to set the number of logical processors to be greater than the number of runs (chains), but more on that later. Anyway, treat your silicon well!\n\n# use detectCores() by itself if you want all CPUs\nsetCores <- round(detectCores() * 0.8)\n\n# make the cluster\ncl <- makeCluster(getOption(\"cl.cores\", setCores))\n  # EDIT ON 2020-07-27: I have been informed that Mac users \n  # may have better luck using:\n  # cl <- parallel::makeCluster(getOption(\"cl.cores\", setCores), \n  #                             setup_strategy = \"sequential\")\n  # This is due to an apparent issue in RStudio. \n  # See this stackoverflow page for details:\n  # https://stackoverflow.com/questions/61700586/r-makecluster-command-used-to-work-but-now-fails-in-rstudio\n\n# load the MCMCglmm package within the cluster\ncl.pkg <- clusterEvalQ(cl, library(MCMCglmm))\n\n# import each object that's necessary to run the function\nclusterExport(cl, \"prior\")\nclusterExport(cl, \"test.data\")\nclusterExport(cl, \"Ainv\")\n\n# use parLapply() to execute 10 runs of MCMCglmm()\n# each with nitt=100000\nmodel2_10runs <- parLapply(cl = cl, 1:10, function(i) {\n  MCMCglmm(\n    phenotype ~ 1,\n    random =  ~ taxon,\n    ginverse = list(taxon = Ainv),\n    data = test.data,\n    prior = prior,\n    verbose = FALSE,\n    nitt = 100000,\n    burnin = 10000,\n    thin = 10\n  )\n})\n\n# once it's finished, use stopCluster() to stop running\n# the parallel cluster\nstopCluster(cl)\n\nThe model2_10runs object is a list that contains each of the 10 mcmc models. You can perform all the usual summarization, plotting…etc, but just be sure to specify models within the list, e.g.: summary(model2_10runs[[3]]) to summarize the third model out of the 10\n Iterations = 10001:99991\n Thinning interval  = 10\n Sample size  = 9000 \n\n DIC: 109.7491 \n\n G-structure:  ~taxon\n\n      post.mean l-95% CI u-95% CI eff.samp\ntaxon     1.782   0.3085    2.989    178.6\n\n R-structure:  ~units\n\n      post.mean  l-95% CI u-95% CI eff.samp\nunits    0.4437 0.0001843    1.224    181.1\n\n Location effects: phenotype ~ 1 \n\n            post.mean l-95% CI u-95% CI eff.samp pMCMC\n(Intercept)    0.1697  -0.5989   0.9841     9000 0.666\nAs I mentioned above, we’ll leave convergence and other fun topics like autocorrelation for another day.\nThat’s all!\n🐢"
  },
  {
    "objectID": "posts/2019-04-28-verify-that-r-packages-are-installed-and-loaded/index.html",
    "href": "posts/2019-04-28-verify-that-r-packages-are-installed-and-loaded/index.html",
    "title": "Check if packages are installed (and install if not) in R",
    "section": "",
    "text": "Say you have an R script that you share with others. You may not be sure that each user has installed all the packages the script will require. Using install.packages() would be unnecessary for users who already have the packages and simply need to load them.\nHere’s some code that provides an easy way to check whether specific packages are in the default Library. If they are, they’re simply loaded via library(). If any packages are missing, they’re installed (with dependencies) into the default Library and are then loaded."
  },
  {
    "objectID": "posts/2019-04-28-verify-that-r-packages-are-installed-and-loaded/index.html#install-install-load-packages",
    "href": "posts/2019-04-28-verify-that-r-packages-are-installed-and-loaded/index.html#install-install-load-packages",
    "title": "Check if packages are installed (and install if not) in R",
    "section": "Install | install & load packages",
    "text": "Install | install & load packages\n\n## If a package is installed, it will be loaded. If any \n## are not, the missing package(s) will be installed \n## from CRAN and then loaded.\n\n## First specify the packages of interest\npackages = c(\"MASS\", \"nlme\")\n\n## Now load or install&load all\npackage.check <- lapply(\n  packages,\n  FUN = function(x) {\n    if (!require(x, character.only = TRUE)) {\n      install.packages(x, dependencies = TRUE)\n      library(x, character.only = TRUE)\n    }\n  }\n)\n\nThe logic of the package.check() function basically goes:\n* Using lapply() to the list of packages,\n* If a package is not installed, install it.\n* Otherwise, load it.\nYou can then use search() to determine whether all the packages have loaded.\n\nsearch()\n\n [1] \".GlobalEnv\"        \"package:nlme\"      \"package:MASS\"     \n [4] \"tools:quarto\"      \"package:stats\"     \"package:graphics\" \n [7] \"package:grDevices\" \"package:datasets\"  \"renv:shims\"       \n[10] \"package:utils\"     \"package:methods\"   \"Autoloads\"        \n[13] \"package:base\"     \n\n\nThat’s all!\n🐢"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Smyth G*, Baliga VB*, Gaede AH*, Wylie DR, and Altshuler DL. 2022. Specializations in optic flow encoding in the pretectum of hummingbirds and zebra finches. Current Biology. 32, 1-8. doi:10.1016/j.cub.2022.04.076.\n* Equal contribution\nHarvey CA, Baliga VB, Wong JCM, Altshuler DL, and Inman DJ. 2022. Birds can transition between stable and unstable states via wing morphing. Nature. 603, 648–653. doi:10.1038/s41586-022-04477-8\nGaede AH*, Baliga VB*, Smyth G, Gutiérrez-Ibáñez C, Altshuler DL, and Wylie DR. 2022. Response Properties of Optic Flow Neurons in the Accessory Optic System of Hummingbirds vs. Zebra Finches and Pigeons. Journal of Neurophysiology. 127, 130-144. doi:10.1152/jn.00437.2021\n* Equal contribution\n\n\n\nLeal PBC, Cabral-Seanez M, Baliga VB, Altshuler DL, and Hartl DJ. 2021. Phase transformation-driven artificial muscle mimics the multifunctionality of avian wing muscle. Journal of the Royal Society Interface. 18, 20201042. doi:10.1098/rsif.2020.1042\nHarvey C, Baliga VB, Goates CD, Hunsaker D, and Inman DJ. 2021. Gull-inspired joint-driven wing morphing allows adaptive longitudinal flight control. Journal of the Royal Society Interface. 18, 20210132. doi:10.1098/rsif.2021.0132\n\n\n\nBahlman JW*, Baliga VB*, and Altshuler DL. 2020.Flight muscle power increases with strain amplitude and decreases with cycle frequency in zebra finches (Taeniopygia guttata). Journal of Experimental Biology. 223, jeb225839. doi:10.1242/jeb.225839\n    * Equal contribution\n\n\n\nBaliga VB, Szabo I, and Altshuler DL. 2019. Range of motion in the avian wing is strongly associated with flight behavior and body mass. Science Advances. 5, eaaw6670. doi:10.1126/sciadv.aaw6670\nDamsgaard C, Baliga VB, Bates E, Burggren W, McKenzie DJ, Taylor E, and Wright PA. 2019. Evolutionary and Cardio-Respiratory Physiology of Air-breathing and Amphibious Fishes. Acta Physiologica. 228, e13406.doi:10.1111/apha.13406\nBaliga VB and Mehta RS. 2019. Morphology, ecology, and biogeography of independent origins of cleaning behavior around the world. Integrative and Comparative Biology. 59, 625–637. doi:10.1093/icb/icz030\nHarvey C, Baliga VB, Lavoie P, and Altshuler DL. 2019. Wing morphing allows gulls to modulate static pitch stability during gliding. Journal of the Royal Society Interface. 16, 20180641. doi:10.1098/rsif.2018.0641\n\n\n\nBaliga VB and Mehta RS. 2018. Phylo-allometric analyses showcase the interplay between life history patterns and phenotypic convergence in cleaner wrasses. American Naturalist. 191, E129–E143 . doi:10.1086/697047\n\n\n\nBaliga VB, Bernstein ZJ*, Sundaram S*, and Mehta RS. 2017. Labrid cleaner fishes show kinematic convergence as juveniles despite variation in morphology. Journal of Experimental Biology. 220, 2787–2797. doi:10.1242/jeb.153783\n* High school intern, UCSC-SIP\nDiluzio AR*, Baliga VB, Higgins BA, and Mehta RS. 2017. Effects of prey characteristics on the feeding behaviors of an apex marine predator, the California moray (Gymnothorax mordax). Zoology. 122, 80–89. doi:10.1016/j.zool.2017.03.002\n* Undergraduate student\nLaw CJ, Baliga VB, Tinker MT, and Mehta RS. 2017. Asynchrony in craniomandibular development and growth in Enhydra lutris nereis (Carnivora: Mustelidae): are southern sea otters born to bite? Biological Journal of the Linnean Society. 121:3, 420–438. doi:10.1093/biolinnean/blw050\n\n\n\nBaliga VB and Mehta RS. 2016. Ontogenetic Allometry in Shape and Flexibility Underlies Life History Patterns of Labrid Cleaning Behavior. Integrative and Comparative Biology. 56:3, 416–427. doi:10.1093/icb/icw028\nBaliga VB and Law CJ. 2016.Cleaners among wrasses: Phylogenetics and evolutionary patterns of cleaning behavior within Labridae. Molecular Phylogenetics and Evolution. 94A, 424–435. doi:10.1016/j.ympev.2015.09.006\nBryce CM, Baliga VB, De Nesnera KL, Fiack D, Goetz K, Tarjan LM, Wade C, Yovovich V, Baumgart S*, Bard DG, Ash D, Parker IM, and Gilbert GS. 2016. Exploring Models in the Biology Classroom. The American Biology Teacher. 78:1, 35–42. doi:10.1525/abt.2016.78.1.35\n* High school teacher\n\n\n\nBaliga VB and Mehta RS. 2015. Linking Cranial Morphology to Prey Capture Kinematics in Three Cleaner Wrasses: Labroides dimidiatus, Larabicus quadrilineatus, and Thalassoma lutescens. Journal of Morphology. 276, 1377–91. doi:10.1002/jmor.20425\n\n\n\nBaliga VB and Mehta RS. 2014. Scaling patterns inform ontogenetic transitions away from cleaning in Thalassoma wrasses. Journal of Experimental Biology. 217, 3597–3606. doi:10.1242/jeb.107680"
  },
  {
    "objectID": "publications.html#peer-reviewed-software-publications",
    "href": "publications.html#peer-reviewed-software-publications",
    "title": "Publications",
    "section": "Peer-reviewed software publications",
    "text": "Peer-reviewed software publications\n\n2021\nBaliga VB. 2021. gaussplotR: Fit, predict, and plot 2D-Gaussians in R. Journal of Open Source Software. 6:60, 3074. doi: 10.21105/joss.03074\n\n\n2019\nBaliga VB and Senthivasan S. 2019. workloopR: Analysis of work loops and other data from muscle physiology experiments in R. Journal of Open Source Software. 4:43, 1856. doi: 10.21105/joss.01856"
  },
  {
    "objectID": "publications.html#conference-papers",
    "href": "publications.html#conference-papers",
    "title": "Publications",
    "section": "Conference papers",
    "text": "Conference papers\nFull-length papers submitted in concert with conference presentations; not peer-reviewed\n\n2020\nHarvey C, Baliga VB, and Inman DJ. 2020. Control force required to morph the elbow and wrist in gulls. American Institute of Aeronautics and Astronautics Scitech 2020 Forum. Held January 6 - 10, 2020 in Orlando, FL. doi:10.2514/6.2020-1037\n\n\n2019\nHarvey C, Baliga VB, Altshuler DL, and Inman DJ. 2019. Pitch Control Effectiveness of the Avian Elbow and Wrist via a Numerical Lifting Line Analysis. American Institute of Aeronautics and Astronautics Scitech 2019 Forum (AIAA 2019-0853). Held January 7 - 11, 2019 in San Diego, CA. doi:10.2514/6.2019-0853"
  },
  {
    "objectID": "publications.html#inquiry-based-teaching-modules",
    "href": "publications.html#inquiry-based-teaching-modules",
    "title": "Publications",
    "section": "Inquiry-based teaching modules",
    "text": "Inquiry-based teaching modules\nAvailable at the SCWIBLES Modules page\n\n2014\nBaliga VB, and Yew B. 2014. Demystifying Dimensions: A mini-lesson on dimensional analysis. Product of GK-12 SCWIBLES, NSF DGE-0947923\n\nBaliga VB, Yew B, Herradora R, Callahan W. 2014. A Fact of Matter: Exploring trends across the Periodic Table. Product of GK-12 SCWIBLES, NSF DGE-0947923\nde Nesnera K, Baliga VB, et al. 2014. Presentation Skills: A video designed for science fair participants in high school. Product of GK–12 SCWIBLES, NSF DGE-0947923\nBaliga VB, and Baumgart S. 2014. A Matter of Human Proportions: Are you Vitruvian? Product of GK-12 SCWIBLES, NSF DGE-0947923\n\n\n2013\nBaliga VB, and Baumgart S. 2013. Hold Your Breath: What triggers the dive response in mammals? Product of GK-12 SCWIBLES, NSF DGE-0947923"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Stuff I tried to Google",
    "section": "",
    "text": "Subscribe to new updates via RSS.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\nParallel processing for MCMCglmm in R (Windows-friendly)\n\n\nI set up a virtual cluster and then use the parallel::parLapply() function to run iterations of MCMCglmm() in parallel for computers running Windows.\n\n\n\n\nR\n\n\nMCMCglmm\n\n\nparallel\n\n\nparallel-processing\n\n\nWindows\n\n\n \n\n\n\n\nMay 3, 2019\n\n\nVikram B. Baliga\n\n\n5 min\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck if packages are installed (and install if not) in R\n\n\nHere’s some code that provides an easy way to check whether specific packages are in the default Library. If they are, they’re simply loaded via library(). If any packages are missing, they’re installed (with dependencies) into the default Library and are then loaded.\n\n\n\n\nR\n\n\npackages\n\n\npackage-installation\n\n\npackage-loading\n\n\n \n\n\n\n\nApr 28, 2019\n\n\nVikram B. Baliga\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Vikram B. Baliga",
    "section": "",
    "text": "Department Profile\n   UBC Zoology\n   vbaliga@zoology.ubc.ca\n   @vbaliga\n   @labricthys\n\n\n\n\n   Google Scholar\n   ORCID\n   ResearchGate\n   Figshare\n   Publons"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Vikram B. Baliga",
    "section": "Welcome",
    "text": "Welcome\nWelcome to my personal site. I’m a data scientist who solves problems related to animal locomotion, evolutionary biology, and physiology. I currently am a Research Associate at the University of British Columbia (see my department profile).\nMy research asks how musculoskeletal and visual systems allow animals to make complex movements. This often involves techniques from motion capture and virtual reality to probe animals’ locomotor behaviors, along with anatomy & physiology to understand the mechanisms that underlie animals’ locomotor capabilities. It sometimes involves machine learning techniques to make sense of stupidly convoluted data.\nThis framework not only helps address how ecology shapes the evolution of animal design, but also inspires the development of engineered structures. Some of my chief collaborators are engineers who incorporate biological insight while designing structures with multi-functional capabilities.\nTruth be told, I’m not really a fan of having a website dedicated to myself. The point of this site is to connect with people. If you like what you see or if you think I can help you, feel free to reach out.\nIt’s also worth mentioning that there is at least one other “Vikram Baliga” with whom you may have me confused. If you are looking for the Vikram Baliga with more of a flare for horticulture, try this page instead. I’m the Vikram Baliga who would undoubtedly beat you in a James Harden look-alike contest (though I can’t say I’m a fan of Harden’s game)."
  },
  {
    "objectID": "press.html",
    "href": "press.html",
    "title": "Press",
    "section": "",
    "text": "Discovering the key to birds’ agility could improve drone design\nUBC Science\nMarch 9, 2022\n\n\n\n\n Evolution of bird maneuverability and lessons for UAV design\nUniversity of Michigan Engineering\nMarch 9, 2022\n\n\n\n\n Building a better airplane by borrowing from birds\nCrosscut’s Human Elements\nApril 19, 2020\n\n\n\n\n Beaty Biodiversity Museum’s Researchers Revealed\nUBC Biodiversity Centre\nFebruary 24, 2020"
  },
  {
    "objectID": "press.html#articles",
    "href": "press.html#articles",
    "title": "Press",
    "section": "Articles",
    "text": "Articles\nThe University of Michigan: Avian secret: The key to agile bird flight is switching quickly between stable and unstable gliding; March 9, 2022. Also covered by Phys.org, Canadian News Media, Head Topics, and Gamers Grade.\nUBC Science: Discovering the key to birds’ agility could improve drone design; March 9, 2022.\nNature News and Views (written by Dr. Aimy Wissa): Trade-offs between stability and manoeuvrability in bird flight; March 7, 2022.\nThe Michigan Engineer News Center: Bird-like wings could help drones keep stable in gusts; June 10, 2021.\nJournal of Experimental Biology - Outside JEB: Wing swing, not shape, is key to bird flight; February 3, 2020.\nThe Wildlife Society: Bird wing study reveals different flight development paths; November 15, 2019.\nVet Candy: Why are bald eagles such great gliders?; November 3, 2019.\nTechnology Org: Scientists are trying to figure out how birds hover, soar and glide; October 31, 2019.\nNature has no boss: Swimming through the air; October 31, 2019.\nThe Scientist: Image of the Day: Flight Styles; October 25, 2019.\nUnited Press International (UPI): An eagle’s gliding ability relies on its wrist movements; October 24, 2019. Also covered by Brietbart, Space Daily and News of the Day.\nCosmos Magazine: Birds wing it in many ways; October 24, 2019.\nCBC Radio-Canada: Le mystère entourant les styles de vol des oiseaux pourrait être résolu (in French); October 24, 2019.\nLa Presse: Les mystères des ailes d’oiseaux (in French); October 24, 2019.\nBeaty Biodiversity Museum News & Stories: Rethinking wings; October 23, 2019.\nEurekAlert! (AAAS): Why are bald eagles such great gliders? It’s all in the wrist; October 23, 2019. Also covered by Science Daily, PhysOrg, and UBC News. Featured image on EurekAlert!\nEngineering.com: Gull Wing Morphing Research Aims to Enhance Flight Design; January 10, 2019.\nEnvironmental News Network: A better way to fly? Researchers study birds and their wings; January 9, 2019.\nThe Hindu: Inspired by seagull’s wings; January 9, 2019.\nUniversity of Toronto News: A better way to fly? U of T and UBC researchers study birds and their wings; January 7, 2019.\nThe Times (UK): Gulls’ bendy wings point way ahead for smarter drones; January 3, 2019.\nEurekAlert! (AAAS): Could gulls’ wings inspire smarter airplane design?; January 3, 2019. Also covered by AlphaGalileo and Lab Manager.\nSciTech Europa: How studying gulls’ wings could improve aircraft design; January 3, 2019.\nThe Tribune (India): Seagull wings may inspire smarter airplane design; January 3, 2019. Also covered by The New Indian Express.\nNews Center Maine: Gull ‘wing morphing’ could be the future of airplane tech; Video by Amaze Lab; January 3, 2019.\nBusiness Standard: Gull’s wings may help design smarter airplanes; January 3, 2019. Also covered by Hindustan Times, Canindia News, and Newkerala.com.\nScience Daily: Engineers, zoologists reveal how gulls ‘wing morph’ for stable soaring; January 2, 2019. Also covered by Tech Xplore.\nNRC Handelsblad: Wiebelende meeuw stabiliseert zich met slim ellebogenwerk (in German); January 2, 2019."
  }
]